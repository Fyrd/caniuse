{
  "title":"Mutation Observer",
  "description":"Method for observing and reacting to changes to the DOM. Replaces MutationEvents, which is deprecated.",
  "spec":"http://www.w3.org/TR/dom/",
  "status":"wd",
  "links":[
    {
      "url":"https://github.com/Polymer/MutationObservers",
      "title":"Polyfill"
    },
    {
      "url":"https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver",
      "title":"MutationObserver from MDN"
    }
  ],
  "bugs":[
    {
      "description":"WebKitMutationObserver in iOS 6 has bug: it doesn't trigger `\"childList\"` changes until you bind one of the deprecated mutation events (for example, `\"DOMNodeInserted\"`) to the node which is watched by observer."
    }
  ],
  "categories":[
    "JS API",
    "DOM"
  ],
  "stats":{
    "ie":{
      "5.5":"n",
      "6":"n",
      "7":"n",
      "8":"n",
      "9":"p",
      "10":"p",
      "11":"y"
    },
    "firefox":{
      "2":"n",
      "3":"n",
      "3.5":"n",
      "3.6":"n",
      "4":"n",
      "5":"n",
      "6":"n",
      "7":"n",
      "8":"n",
      "9":"n",
      "10":"n",
      "11":"n",
      "12":"n",
      "13":"n",
      "14":"y",
      "15":"y",
      "16":"y",
      "17":"y",
      "18":"y",
      "19":"y",
      "20":"y",
      "21":"y",
      "22":"y",
      "23":"y",
      "24":"y",
      "25":"y",
      "26":"y"
    },
    "chrome":{
      "4":"n",
      "5":"n",
      "6":"n",
      "7":"n",
      "8":"n",
      "9":"n",
      "10":"n",
      "11":"n",
      "12":"n",
      "13":"n",
      "14":"n",
      "15":"n",
      "16":"n",
      "17":"n",
      "18":"y x",
      "19":"y x",
      "20":"y x",
      "21":"y x",
      "22":"y x",
      "23":"y x",
      "24":"y x",
      "25":"y x",
      "26":"y x",
      "27":"y",
      "28":"y",
      "29":"y",
      "30":"y",
      "31":"y",
      "32":"y"
    },
    "safari":{
      "3.1":"n",
      "3.2":"n",
      "4":"n",
      "5":"n",
      "5.1":"n",
      "6":"y x",
      "6.1":"y",
      "7":"y"
    },
    "opera":{
      "9":"n",
      "9.5-9.6":"n",
      "10.0-10.1":"n",
      "10.5":"n",
      "10.6":"n",
      "11":"n",
      "11.1":"n",
      "11.5":"n",
      "11.6":"n",
      "12":"n",
      "12.1":"n",
      "15":"y",
      "16":"y",
      "17":"y",
      "18":"y"
    },
    "ios_saf":{
      "3.2":"n",
      "4.0-4.1":"n",
      "4.2-4.3":"n",
      "5.0-5.1":"n",
      "6.0-6.1":"y x",
      "7.0":"y"
    },
    "op_mini":{
      "5.0-7.0":"n"
    },
    "android":{
      "2.1":"n",
      "2.2":"n",
      "2.3":"n",
      "3":"n",
      "4":"p",
      "4.1":"p",
      "4.2-4.3":"p"
    },
    "bb":{
      "7":"n",
      "10":"y x"
    },
    "op_mob":{
      "10":"n",
      "11":"n",
      "11.1":"n",
      "11.5":"n",
      "12":"n",
      "12.1":"n",
      "0":"y"
    },
    "and_chr":{
      "0":"y"
    },
    "and_ff":{
      "0":"y"
    },
    "ie_mob":{
      "10":"p"
    }
  },
  "notes":"When the content of a node with a single CharacterData child node is changed by innerHTML attribute and the node have a single different one as a result, WebKit browsers consider it as a characterData mutation of the child CharacterData node, while other browsers think it as a childList mutation of the parent node.",
  "usage_perc_y":56.45,
  "usage_perc_a":0,
  "ucprefix":false,
  "parent":"",
  "keywords":"MutationObserver",
  "shown":true
}